{"dependencies": [{"name": "asgiref", "version": "3.8.1", "vulns": []}, {"name": "asttokens", "version": "3.0.0", "vulns": []}, {"name": "colorama", "version": "0.4.6", "vulns": []}, {"name": "comm", "version": "0.2.2", "vulns": []}, {"name": "debugpy", "version": "1.8.14", "vulns": []}, {"name": "decorator", "version": "5.2.1", "vulns": []}, {"name": "django", "version": "5.1.7", "vulns": [{"id": "PYSEC-2025-37", "fix_versions": ["4.2.21", "5.1.9", "5.2.1"], "aliases": ["CVE-2025-32873"], "description": "An issue was discovered in Django 4.2 before 4.2.21, 5.1 before 5.1.9, and 5.2 before 5.2.1. The django.utils.html.strip_tags() function is vulnerable to a potential denial-of-service (slow performance) when processing inputs containing large sequences of incomplete HTML tags. The template filter striptags is also vulnerable, because it is built on top of strip_tags()."}, {"id": "PYSEC-2025-14", "fix_versions": ["5.0.14", "5.1.8"], "aliases": ["CVE-2025-27556"], "description": "An issue was discovered in Django 5.1 before 5.1.8 and 5.0 before 5.0.14. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.views.LoginView, django.contrib.auth.views.LogoutView, and django.views.i18n.set_language are subject to a potential denial-of-service attack via certain inputs with a very large number of Unicode characters."}, {"id": "PYSEC-2025-47", "fix_versions": ["4.2.22", "5.1.10", "5.2.2"], "aliases": ["CVE-2025-48432"], "description": "An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems."}]}, {"name": "executing", "version": "2.2.0", "vulns": []}, {"name": "ipykernel", "version": "6.29.5", "vulns": []}, {"name": "ipython", "version": "8.22.2", "vulns": []}, {"name": "prompt-toolkit", "version": "3.0.51", "vulns": []}, {"name": "ipython-pygments-lexers", "version": "1.1.1", "vulns": []}, {"name": "jedi", "version": "0.19.2", "vulns": []}, {"name": "parso", "version": "0.8.4", "vulns": []}, {"name": "jupyter-client", "version": "8.6.3", "vulns": []}, {"name": "jupyter-core", "version": "5.7.2", "vulns": [{"id": "GHSA-33p9-3p43-82vq", "fix_versions": ["5.8.1"], "aliases": ["CVE-2025-30167"], "description": "## Impact  On Windows, the shared `%PROGRAMDATA%` directory is searched for configuration files (`SYSTEM_CONFIG_PATH` and `SYSTEM_JUPYTER_PATH`), which may allow users to create configuration files affecting other users.  Only shared Windows systems with multiple users and unprotected `%PROGRAMDATA%` are affected.  ## Mitigations  - upgrade to `jupyter_core>=5.8.1` (5.8.0 is patched but breaks `jupyter-server`) , or - as administrator, modify the permissions on the `%PROGRAMDATA%` directory so it is not writable by unauthorized users, or - as administrator, create the `%PROGRAMDATA%\\jupyter` directory with appropriately restrictive permissions, or - as user or administrator, set the `%PROGRAMDATA%` environment variable to a directory with appropriately restrictive permissions (e.g. controlled by administrators _or_ the current user)  ## Credit  Reported via Trend Micro Zero Day Initiative as ZDI-CAN-25932"}]}, {"name": "matplotlib-inline", "version": "0.1.7", "vulns": []}, {"name": "nest-asyncio", "version": "1.6.0", "vulns": []}, {"name": "packaging", "version": "25.0", "vulns": []}, {"name": "pillow", "version": "11.1.0", "vulns": []}, {"name": "platformdirs", "version": "4.3.8", "vulns": []}, {"name": "psutil", "version": "7.0.0", "vulns": []}, {"name": "psycopg2", "version": "2.9.10", "vulns": []}, {"name": "pure-eval", "version": "0.2.3", "vulns": []}, {"name": "pygments", "version": "2.19.1", "vulns": []}, {"name": "python-dateutil", "version": "2.9.0.post0", "vulns": []}, {"name": "pyzmq", "version": "26.4.0", "vulns": []}, {"name": "six", "version": "1.17.0", "vulns": []}, {"name": "sqlparse", "version": "0.5.3", "vulns": []}, {"name": "stack-data", "version": "0.6.3", "vulns": []}, {"name": "tornado", "version": "6.4.2", "vulns": [{"id": "GHSA-7cx3-6m66-7c5m", "fix_versions": ["6.5"], "aliases": ["CVE-2025-47287"], "description": "### Summary  When Tornado's ``multipart/form-data`` parser encounters certain errors, it logs a warning but continues trying to parse the remainder of the data. This allows remote attackers to generate an extremely high volume of logs, constituting a DoS attack. This DoS is compounded by the fact that the logging subsystem is synchronous.  ### Affected versions  All versions of Tornado prior to 6.5 are affected. The vulnerable parser is enabled by default.  ### Solution  Upgrade to Tornado version 6.5. In the meantime, risk can be mitigated by blocking `Content-Type: multipart/form-data` in a proxy."}]}, {"name": "traitlets", "version": "5.14.3", "vulns": []}, {"name": "tzdata", "version": "2025.2", "vulns": []}, {"name": "wcwidth", "version": "0.2.13", "vulns": []}, {"name": "pywin32", "version": "311", "vulns": []}], "fixes": []}
