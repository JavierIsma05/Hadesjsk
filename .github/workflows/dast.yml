name: DAST - OWASP ZAP Baseline

on:
  push:
    branches: [master]
  pull_request:

jobs:
  dast:
    name: ZAP Baseline Scan
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: javi1234
          POSTGRES_DB: db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://myuser:mypassword@localhost:5432/mydb
      DB_NAME: db
      DB_USER: postgres
      DB_PASSWORD: javi1234
      DB_HOST: localhost
      DB_PORT: 5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            nc -z localhost 5432 && echo "Postgres is up" && break
            echo "Waiting for postgres..."
            sleep 3
          done

      - name: Apply Django migrations
        run: |
          python manage.py migrate

      - name: Run Django server
        run: |
          nohup python manage.py runserver 0.0.0.0:8000 &
          sleep 15

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:8000'
          fail_action: false
          cmd_options: '-J owasp-zap-report.json'

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: owasp-zap-report.json
